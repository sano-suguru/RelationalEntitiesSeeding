// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelationalEntitiesSeeding.Data;

namespace RelationalEntitiesSeeding.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20181128153350_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RelationalEntitiesSeeding.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new { AuthorId = 1, Birthday = new DateTime(1928, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "フィリップ・K・ディック" },
                        new { AuthorId = 2, Birthday = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "ジョージ・オーウェル" }
                    );
                });

            modelBuilder.Entity("RelationalEntitiesSeeding.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<int>("PublushYear");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { BookId = 1, AuthorId = 1, PublushYear = 1969, Title = "アンドロイドは電気羊の夢を見るか?" },
                        new { BookId = 2, AuthorId = 1, PublushYear = 1962, Title = "高い城の男" },
                        new { BookId = 3, AuthorId = 2, PublushYear = 1949, Title = "1984年" }
                    );
                });

            modelBuilder.Entity("RelationalEntitiesSeeding.Entities.Book", b =>
                {
                    b.HasOne("RelationalEntitiesSeeding.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
